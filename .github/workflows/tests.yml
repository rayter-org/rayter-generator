name: Tests

on: [push, pull_request]

permissions:
  contents: read

jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - { name: "3.8", python: "3.8", os: ubuntu-latest, tox: py38 }
          - { name: "3.9", python: "3.9", os: ubuntu-latest, tox: py39 }
          - { name: "3.10", python: "3.10", os: ubuntu-latest, tox: py310 }
          - { name: "3.11", python: "3.11", os: ubuntu-latest, tox: py311 }

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Update pip
        run: |
          python -m pip install --upgrade pip
      - name: Get pip cache dir
        id: pip-cache
        run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: pip|${{ runner.os }}|${{ matrix.python }}|${{ hashFiles('setup.cfg') }}
      - name: set full Python version in PY env var
        # See https://pre-commit.com/#github-actions-example
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - run: python -m pip install tox
      - run: python -m tox -e ${{ matrix.tox }}

  publish:
    name: PyPI - Publish if this is a tagged commit
    needs: [tests]
    if: startsWith(github.event.ref, 'refs/tags') && github.repository_owner == 'rayter-org'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip build
      - name: Build + set TAG env var for later use
        run: |
          python -m build
          echo "TAG=${GITHUB_REF#refs/*/}" | tee -a $GITHUB_ENV
      - name: Publish tagged version to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
